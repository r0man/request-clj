[{:route-name :root,
  :path-re "/",
  :method :get,
  :path "/",
  :path-parts [""],
  :path-params []}
 {:route-name :create-address,
  :path-re "/addresses",
  :method :post,
  :path "/addresses",
  :path-parts ["" "addresses"],
  :path-params []}
 {:route-name :addresses,
  :path-re "/addresses",
  :method :get,
  :path "/addresses",
  :path-parts ["" "addresses"],
  :path-params []}
 {:route-name :delete-address,
  :path-re "/addresses/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/addresses/:id",
  :path-parts ["" "addresses" :id],
  :path-params [:id]}
 {:route-name :update-address,
  :path-re "/addresses/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/addresses/:id",
  :path-parts ["" "addresses" :id],
  :path-params [:id]}
 {:route-name :address,
  :path-re "/addresses/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/addresses/:id",
  :path-parts ["" "addresses" :id],
  :path-params [:id]}
 {:route-name :create-airport,
  :path-re "/airports",
  :method :post,
  :path "/airports",
  :path-parts ["" "airports"],
  :path-params []}
 {:route-name :airports,
  :path-re "/airports",
  :method :get,
  :path "/airports",
  :path-parts ["" "airports"],
  :path-params []}
 {:route-name :delete-airport,
  :path-re "/airports/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/airports/:id",
  :path-parts ["" "airports" :id],
  :path-params [:id]}
 {:route-name :update-airport,
  :path-re "/airports/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/airports/:id",
  :path-parts ["" "airports" :id],
  :path-params [:id]}
 {:route-name :airport,
  :path-re "/airports/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/airports/:id",
  :path-parts ["" "airports" :id],
  :path-params [:id]}
 {:route-name :create-comment,
  :path-re "/comments",
  :method :post,
  :path "/comments",
  :path-parts ["" "comments"],
  :path-params []}
 {:route-name :comments,
  :path-re "/comments",
  :method :get,
  :path "/comments",
  :path-parts ["" "comments"],
  :path-params []}
 {:route-name :delete-comment,
  :path-re "/comments/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/comments/:id",
  :path-parts ["" "comments" :id],
  :path-params [:id]}
 {:route-name :update-comment,
  :path-re "/comments/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/comments/:id",
  :path-parts ["" "comments" :id],
  :path-params [:id]}
 {:route-name :comment,
  :path-re "/comments/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/comments/:id",
  :path-parts ["" "comments" :id],
  :path-params [:id]}
 {:route-name :create-continent,
  :path-re "/continents",
  :method :post,
  :path "/continents",
  :path-parts ["" "continents"],
  :path-params []}
 {:route-name :continents,
  :path-re "/continents",
  :method :get,
  :path "/continents",
  :path-parts ["" "continents"],
  :path-params []}
 {:route-name :delete-continent,
  :path-re "/continents/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id",
  :path-parts ["" "continents" :id],
  :path-params [:id]}
 {:route-name :update-continent,
  :path-re "/continents/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id",
  :path-parts ["" "continents" :id],
  :path-params [:id]}
 {:route-name :continent,
  :path-re "/continents/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id",
  :path-parts ["" "continents" :id],
  :path-params [:id]}
 {:route-name :airports-in-continent,
  :path-re "/continents/([^/]+)/airports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/airports",
  :path-parts ["" "continents" :id "airports"],
  :path-params [:id]}
 {:route-name :countries-in-continent,
  :path-re "/continents/([^/]+)/countries",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/countries",
  :path-parts ["" "continents" :id "countries"],
  :path-params [:id]}
 {:route-name :ports-in-continent,
  :path-re "/continents/([^/]+)/ports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/ports",
  :path-parts ["" "continents" :id "ports"],
  :path-params [:id]}
 {:route-name :regions-in-continent,
  :path-re "/continents/([^/]+)/regions",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/regions",
  :path-parts ["" "continents" :id "regions"],
  :path-params [:id]}
 {:route-name :spots-in-continent,
  :path-re "/continents/([^/]+)/spots",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/spots",
  :path-parts ["" "continents" :id "spots"],
  :path-params [:id]}
 {:route-name :users-in-continent,
  :path-re "/continents/([^/]+)/surfers",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/continents/:id/surfers",
  :path-parts ["" "continents" :id "surfers"],
  :path-params [:id]}
 {:route-name :create-country,
  :path-re "/countries",
  :method :post,
  :path "/countries",
  :path-parts ["" "countries"],
  :path-params []}
 {:route-name :countries,
  :path-re "/countries",
  :method :get,
  :path "/countries",
  :path-parts ["" "countries"],
  :path-params []}
 {:route-name :delete-country,
  :path-re "/countries/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id",
  :path-parts ["" "countries" :id],
  :path-params [:id]}
 {:route-name :update-country,
  :path-re "/countries/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id",
  :path-parts ["" "countries" :id],
  :path-params [:id]}
 {:route-name :country,
  :path-re "/countries/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id",
  :path-parts ["" "countries" :id],
  :path-params [:id]}
 {:route-name :airports-in-country,
  :path-re "/countries/([^/]+)/airports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id/airports",
  :path-parts ["" "countries" :id "airports"],
  :path-params [:id]}
 {:route-name :ports-in-country,
  :path-re "/countries/([^/]+)/ports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id/ports",
  :path-parts ["" "countries" :id "ports"],
  :path-params [:id]}
 {:route-name :regions-in-country,
  :path-re "/countries/([^/]+)/regions",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id/regions",
  :path-parts ["" "countries" :id "regions"],
  :path-params [:id]}
 {:route-name :spots-in-country,
  :path-re "/countries/([^/]+)/spots",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id/spots",
  :path-parts ["" "countries" :id "spots"],
  :path-params [:id]}
 {:route-name :users-in-country,
  :path-re "/countries/([^/]+)/surfers",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/countries/:id/surfers",
  :path-parts ["" "countries" :id "surfers"],
  :path-params [:id]}
 {:route-name :create-image,
  :path-re "/images",
  :method :post,
  :path "/images",
  :path-parts ["" "images"],
  :path-params []}
 {:route-name :images,
  :path-re "/images",
  :method :get,
  :path "/images",
  :path-parts ["" "images"],
  :path-params []}
 {:route-name :delete-image,
  :path-re "/images/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/images/:id",
  :path-parts ["" "images" :id],
  :path-params [:id]}
 {:route-name :update-image,
  :path-re "/images/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/images/:id",
  :path-parts ["" "images" :id],
  :path-params [:id]}
 {:route-name :image,
  :path-re "/images/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/images/:id",
  :path-parts ["" "images" :id],
  :path-params [:id]}
 {:route-name :oauth-applications,
  :path-re "/oauth/applications",
  :method :get,
  :path "/oauth/applications",
  :path-parts ["" "oauth" "applications"],
  :path-params []}
 {:route-name :delete-oauth-application,
  :path-re "/oauth/applications/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/oauth/applications/:id",
  :path-parts ["" "oauth" "applications" :id],
  :path-params [:id]}
 {:route-name :oauth-application,
  :path-re "/oauth/applications/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/oauth/applications/:id",
  :path-parts ["" "oauth" "applications" :id],
  :path-params [:id]}
 {:route-name :create-oauth-access-token,
  :path-re "/oauth/token",
  :method :post,
  :path "/oauth/token",
  :path-parts ["" "oauth" "token"],
  :path-params []}
 {:route-name :create-photo,
  :path-re "/photos",
  :method :post,
  :path "/photos",
  :path-parts ["" "photos"],
  :path-params []}
 {:route-name :photos,
  :path-re "/photos",
  :method :get,
  :path "/photos",
  :path-parts ["" "photos"],
  :path-params []}
 {:route-name :delete-photo,
  :path-re "/photos/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/photos/:id",
  :path-parts ["" "photos" :id],
  :path-params [:id]}
 {:route-name :update-photo,
  :path-re "/photos/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/photos/:id",
  :path-parts ["" "photos" :id],
  :path-params [:id]}
 {:route-name :photo,
  :path-re "/photos/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/photos/:id",
  :path-parts ["" "photos" :id],
  :path-params [:id]}
 {:route-name :photo-images,
  :path-re "/photos/([^/]+)/images",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/photos/:id/images",
  :path-parts ["" "photos" :id "images"],
  :path-params [:id]}
 {:route-name :create-port,
  :path-re "/ports",
  :method :post,
  :path "/ports",
  :path-parts ["" "ports"],
  :path-params []}
 {:route-name :ports,
  :path-re "/ports",
  :method :get,
  :path "/ports",
  :path-parts ["" "ports"],
  :path-params []}
 {:route-name :delete-port,
  :path-re "/ports/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/ports/:id",
  :path-parts ["" "ports" :id],
  :path-params [:id]}
 {:route-name :update-port,
  :path-re "/ports/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/ports/:id",
  :path-parts ["" "ports" :id],
  :path-params [:id]}
 {:route-name :port,
  :path-re "/ports/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/ports/:id",
  :path-parts ["" "ports" :id],
  :path-params [:id]}
 {:route-name :create-region,
  :path-re "/regions",
  :method :post,
  :path "/regions",
  :path-parts ["" "regions"],
  :path-params []}
 {:route-name :regions,
  :path-re "/regions",
  :method :get,
  :path "/regions",
  :path-parts ["" "regions"],
  :path-params []}
 {:route-name :delete-region,
  :path-re "/regions/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id",
  :path-parts ["" "regions" :id],
  :path-params [:id]}
 {:route-name :update-region,
  :path-re "/regions/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id",
  :path-parts ["" "regions" :id],
  :path-params [:id]}
 {:route-name :region,
  :path-re "/regions/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id",
  :path-parts ["" "regions" :id],
  :path-params [:id]}
 {:route-name :airports-in-region,
  :path-re "/regions/([^/]+)/airports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id/airports",
  :path-parts ["" "regions" :id "airports"],
  :path-params [:id]}
 {:route-name :ports-in-region,
  :path-re "/regions/([^/]+)/ports",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id/ports",
  :path-parts ["" "regions" :id "ports"],
  :path-params [:id]}
 {:route-name :spots-in-region,
  :path-re "/regions/([^/]+)/spots",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id/spots",
  :path-parts ["" "regions" :id "spots"],
  :path-params [:id]}
 {:route-name :users-in-region,
  :path-re "/regions/([^/]+)/surfers",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/regions/:id/surfers",
  :path-parts ["" "regions" :id "surfers"],
  :path-params [:id]}
 {:route-name :create-role,
  :path-re "/roles",
  :method :post,
  :path "/roles",
  :path-parts ["" "roles"],
  :path-params []}
 {:route-name :roles,
  :path-re "/roles",
  :method :get,
  :path "/roles",
  :path-parts ["" "roles"],
  :path-params []}
 {:route-name :delete-role,
  :path-re "/roles/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/roles/:id",
  :path-parts ["" "roles" :id],
  :path-params [:id]}
 {:route-name :update-role,
  :path-re "/roles/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/roles/:id",
  :path-parts ["" "roles" :id],
  :path-params [:id]}
 {:route-name :role,
  :path-re "/roles/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/roles/:id",
  :path-parts ["" "roles" :id],
  :path-params [:id]}
 {:route-name :routes,
  :path-re "/routes",
  :method :get,
  :path "/routes",
  :path-parts ["" "routes"],
  :path-params []}
 {:route-name :search,
  :path-re "/search",
  :method :get,
  :path "/search",
  :path-parts ["" "search"],
  :path-params []}
 {:route-name :create-spot,
  :path-re "/spots",
  :method :post,
  :path "/spots",
  :path-parts ["" "spots"],
  :path-params []}
 {:route-name :spots,
  :path-re "/spots",
  :method :get,
  :path "/spots",
  :path-parts ["" "spots"],
  :path-params []}
 {:route-name :delete-spot,
  :path-re "/spots/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id",
  :path-parts ["" "spots" :id],
  :path-params [:id]}
 {:route-name :update-spot,
  :path-re "/spots/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id",
  :path-parts ["" "spots" :id],
  :path-params [:id]}
 {:route-name :spot,
  :path-re "/spots/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id",
  :path-parts ["" "spots" :id],
  :path-params [:id]}
 {:route-name :spot-comments,
  :path-re "/spots/([^/]+)/comments",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/comments",
  :path-parts ["" "spots" :id "comments"],
  :path-params [:id]}
 {:route-name :spot-photos,
  :path-re "/spots/([^/]+)/photos",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/photos",
  :path-parts ["" "spots" :id "photos"],
  :path-params [:id]}
 {:route-name :create-spot-rating,
  :path-re "/spots/([^/]+)/ratings",
  :method :post,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/ratings",
  :path-parts ["" "spots" :id "ratings"],
  :path-params [:id]}
 {:route-name :spot-ratings,
  :path-re "/spots/([^/]+)/ratings",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/ratings",
  :path-parts ["" "spots" :id "ratings"],
  :path-params [:id]}
 {:route-name :create-spot-session,
  :path-re "/spots/([^/]+)/sessions",
  :method :post,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/sessions",
  :path-parts ["" "spots" :id "sessions"],
  :path-params [:id]}
 {:route-name :spot-sessions,
  :path-re "/spots/([^/]+)/sessions",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/sessions",
  :path-parts ["" "spots" :id "sessions"],
  :path-params [:id]}
 {:route-name :spot-weather,
  :path-re "/spots/([^/]+)/weather",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/spots/:id/weather",
  :path-parts ["" "spots" :id "weather"],
  :path-params [:id]}
 {:route-name :create-user,
  :path-re "/surfers",
  :method :post,
  :path "/surfers",
  :path-parts ["" "surfers"],
  :path-params []}
 {:route-name :users,
  :path-re "/surfers",
  :method :get,
  :path "/surfers",
  :path-parts ["" "surfers"],
  :path-params []}
 {:route-name :current-user,
  :path-re "/surfers/me",
  :method :get,
  :path "/surfers/me",
  :path-parts ["" "surfers" "me"],
  :path-params []}
 {:route-name :delete-user,
  :path-re "/surfers/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id",
  :path-parts ["" "surfers" :id],
  :path-params [:id]}
 {:route-name :update-user,
  :path-re "/surfers/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id",
  :path-parts ["" "surfers" :id],
  :path-params [:id]}
 {:route-name :user,
  :path-re "/surfers/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id",
  :path-parts ["" "surfers" :id],
  :path-params [:id]}
 {:route-name :user-comments,
  :path-re "/surfers/([^/]+)/comments",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id/comments",
  :path-parts ["" "surfers" :id "comments"],
  :path-params [:id]}
 {:route-name :follow-user,
  :path-re "/surfers/([^/]+)/follow",
  :method :post,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id/follow",
  :path-parts ["" "surfers" :id "follow"],
  :path-params [:id]}
 {:route-name :unfollow-user,
  :path-re "/surfers/([^/]+)/unfollow",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id/unfollow",
  :path-parts ["" "surfers" :id "unfollow"],
  :path-params [:id]}
 {:route-name :user-followers,
  :path-re "/surfers/([^/]+)/followers",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id/followers",
  :path-parts ["" "surfers" :id "followers"],
  :path-params [:id]}
 {:route-name :user-roles,
  :path-re "/surfers/([^/]+)/roles",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/surfers/:id/roles",
  :path-parts ["" "surfers" :id "roles"],
  :path-params [:id]}
 {:route-name :weather-datasets,
  :path-re "/weather/datasets",
  :method :get,
  :path "/weather/datasets",
  :path-parts ["" "weather" "datasets"],
  :path-params []}
 {:route-name :delete-weather-dataset,
  :path-re "/weather/datasets/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/datasets/:id",
  :path-parts ["" "weather" "datasets" :id],
  :path-params [:id]}
 {:route-name :weather-dataset,
  :path-re "/weather/datasets/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/datasets/:id",
  :path-parts ["" "weather" "datasets" :id],
  :path-params [:id]}
 {:route-name :weather-models,
  :path-re "/weather/models",
  :method :get,
  :path "/weather/models",
  :path-parts ["" "weather" "models"],
  :path-params []}
 {:route-name :update-weather-model,
  :path-re "/weather/models/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/models/:id",
  :path-parts ["" "weather" "models" :id],
  :path-params [:id]}
 {:route-name :delete-weather-model,
  :path-re "/weather/models/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/models/:id",
  :path-parts ["" "weather" "models" :id],
  :path-params [:id]}
 {:route-name :weather-model,
  :path-re "/weather/models/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/models/:id",
  :path-parts ["" "weather" "models" :id],
  :path-params [:id]}
 {:route-name :weather-datasets-by-model,
  :path-re "/weather/models/([^/]+)/datasets",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/models/:id/datasets",
  :path-parts ["" "weather" "models" :id "datasets"],
  :path-params [:id]}
 {:route-name :weather-variables-by-model,
  :path-re "/weather/models/([^/]+)/variables",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/models/:id/variables",
  :path-parts ["" "weather" "models" :id "variables"],
  :path-params [:id]}
 {:route-name :weather-variables,
  :path-re "/weather/variables",
  :method :get,
  :path "/weather/variables",
  :path-parts ["" "weather" "variables"],
  :path-params []}
 {:route-name :update-weather-variable,
  :path-re "/weather/variables/([^/]+)",
  :method :put,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/variables/:id",
  :path-parts ["" "weather" "variables" :id],
  :path-params [:id]}
 {:route-name :delete-weather-variable,
  :path-re "/weather/variables/([^/]+)",
  :method :delete,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/variables/:id",
  :path-parts ["" "weather" "variables" :id],
  :path-params [:id]}
 {:route-name :weather-variable,
  :path-re "/weather/variables/([^/]+)",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/variables/:id",
  :path-parts ["" "weather" "variables" :id],
  :path-params [:id]}
 {:route-name :weather-datasets-by-variable,
  :path-re "/weather/variables/([^/]+)/datasets",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/variables/:id/datasets",
  :path-parts ["" "weather" "variables" :id "datasets"],
  :path-params [:id]}
 {:route-name :weather-models-by-variable,
  :path-re "/weather/variables/([^/]+)/models",
  :method :get,
  :path-constraints {:id "([^/]+)"},
  :path "/weather/variables/:id/models",
  :path-parts ["" "weather" "variables" :id "models"],
  :path-params [:id]}]
